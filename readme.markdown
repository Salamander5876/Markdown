# Простое задание: Делаем документацию для проекта в Markdown

## Что нужно сделать?

Вы создадите **три файла** для вымышленного проекта **TaskMaster** - это как приложение для списка дел. Файлы будут в формате Markdown (это простой текст с разметкой, как в заметках). Ваша цель - сделать документацию, чтобы любой человек понял, что это за проект, как его использовать и как помочь в его разработке. Всё делаем в текстовом редакторе (например, VS Code или Блокнот).

---

## Зачем это нужно?

- Чтобы научиться писать понятные инструкции для GitHub.
- Чтобы попрактиковаться в Markdown - это как писать текст с заголовками и списками.
- Чтобы ваш проект выглядел как настоящий на GitHub.

---

## Что за проект TaskMaster?

**TaskMaster** - это программа для создания и отслеживания задач (например, "Купить молоко" или "Сделать домашку"). Она работает на компьютере через команды или в браузере. Представьте, что вы выкладываете её на GitHub, и нужно объяснить людям, как её запустить и как помочь с кодом.

---

## Что делать? Пошагово

Вам нужно создать **три файла**: `README.md`, `CONTRIBUTING.md` и `LICENSE.md`. Это как инструкции и правила для вашего проекта. Вот что в них писать:

### 1. Файл `README.md` - Главная страница проекта

**Что это?** Это как реклама вашего проекта. Любой, кто зайдёт на GitHub, сначала увидит этот файл. Он должен объяснить, что делает TaskMaster и как его запустить.

**Что писать?**

1. **Название проекта**:
   - Напишите `# TaskMaster` (это заголовок).
2. **О проекте**:
   - Напишите 2-3 простых предложения, что это за приложение. Например: "TaskMaster помогает записывать и отслеживать ваши задачи."
3. **Как установить**:
   - Сделайте нумерованный список с командами для установки. Просто скопируйте пример ниже, если не знаете.
4. **Как использовать**:
   - Покажите пример команды, чтобы запустить программу, в блоке кода (пишется между ```bash и ```).
5. **Значок (badge)**:
   - Добавьте картинку-значок, например, версию проекта. Используйте: `![Version](https://img.shields.io/badge/version-1.0.0-blue.svg)`.
6. **Лицензия**:
   - Напишите, что проект под MIT License, и добавьте ссылку на файл `LICENSE.md`.
7. **Контакты**:
   - Напишите, куда писать вопросы (например, "Задавайте вопросы в Issues на GitHub").

**Пример файла `README.md`:**

```markdown
# TaskMaster

Это приложение, чтобы записывать и следить за задачами. Простое и удобное!

![Version](https://img.shields.io/badge/version-1.0.0-blue.svg)

## Как установить

1. Скачайте проект с GitHub:
   ```bash
   git clone https://github.com/your-username/taskmaster.git
   ```
2. Установите нужные библиотеки:
   ```bash
   npm install
   ```

## Как использовать

Запустите программу:
```bash
node index.js
```

## Лицензия

TaskMaster использует [MIT License](LICENSE.md).

## Контакты

Есть вопросы? Пишите в [Issues на GitHub](https://github.com/your-username/taskmaster/issues).
```

**Как сделать?**
- Откройте редактор, создайте файл `README.md`.
- Скопируйте пример выше и замените `your-username` на любое имя (например, своё).
- Проверьте, чтобы всё выглядело аккуратно (заголовки с `#`, списки с `-` или `1.`, код между ```).

---

### 2. Файл `CONTRIBUTING.md` - Как помочь проекту

**Что это?** Этот файл объясняет, как другие люди могут добавить что-то в ваш проект (например, новый код).

**Что писать?**

1. **Заголовок**:
   - Напишите `# Как помочь TaskMaster`.
2. **Приветствие**:
   - Напишите пару слов, чтобы поблагодарить тех, кто хочет помочь. Например: "Спасибо, что хотите улучшить TaskMaster!"
3. **Как начать**:
   - Напишите шаги, как скачать проект и создать новую ветку для изменений (список с номерами).
4. **Как отправить изменения**:
   - Объясните, как сделать Pull Request (это когда вы предлагаете свои изменения).
5. **Правила для кода**:
   - Придумайте 2-3 простых правила, например: "Пишите понятные комментарии" или "Проверяйте, что код работает".

**Пример файла `CONTRIBUTING.md`:**

```markdown
# Как помочь TaskMaster

Спасибо, что хотите улучшить наш проект!

## Как начать

1. Сделайте копию проекта (форк) на GitHub.
2. Скачайте проект:
   ```bash
   git clone https://github.com/your-username/taskmaster.git
   ```
3. Создайте новую ветку:
   ```bash
   git checkout -b my-new-feature
   ```

## Как отправить изменения

1. Сохраните изменения:
   ```bash
   git commit -m "Добавлена новая кнопка"
   ```
2. Отправьте изменения:
   ```bash
   git push origin my-new-feature
   ```
3. Создайте Pull Request на GitHub.

## Правила для кода

- Пишите понятные комментарии.
- Проверяйте, что код работает.
- Используйте 2 пробела для отступов.
```

**Как сделать?**
- Создайте файл `CONTRIBUTING.md`.
- Скопируйте пример и замените `your-username` на любое имя.
- Убедитесь, что команды в блоках кода правильные (между ```bash и ```).

---

### 3. Файл `LICENSE.md` - Правила использования проекта

**Что это?** Это лицензия, которая говорит, как другие могут использовать ваш код. Мы используем MIT License - она простая.

**Что писать?**

1. **Заголовок**:
   - Напишите `# MIT License`.
2. **Текст лицензии**:
   - Скопируйте текст MIT License из примера ниже.
3. **Ваше имя**:
   - Замените `[Ваше имя]` на своё имя.
   - Замените `[год]` на 2025.

**Пример файла `LICENSE.md`:**

```markdown
# MIT License

Copyright (c) 2025 Ваше Имя

Permission is hereby granted, free of charge, to any person obtaining a copy
of this software and associated documentation files (the "Software"), to deal
in the Software without restriction, including without limitation the rights
to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all
copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
SOFTWARE.
```

**Как сделать?**
- Создайте файл `LICENSE.md`.
- Скопируйте текст выше, вставьте своё имя вместо `[Ваше имя]`.
- Проверьте, чтобы текст был аккуратным.

---

## Как выполнять задание? Пошагово

1. **Откройте редактор**:
   - Используйте VS Code, Блокнот или любой другой редактор.
   - Создайте три файла: `README.md`, `CONTRIBUTING.md`, `LICENSE.md`.

2. **Скопируйте примеры**:
   - Возьмите примеры выше и вставьте их в файлы.
   - Замените `your-username` и `[Ваше имя]` на свои данные.

3. **Проверьте, как выглядит**:
   - Если есть VS Code, включите предпросмотр Markdown (обычно кнопка с лупой).
   - Или загрузите файлы на GitHub, чтобы увидеть, как они выглядят.

4. **Уложитесь в 1 час**:
   - 20 минут на `README.md`.
   - 20 минут на `CONTRIBUTING.md`.
   - 10 минут на `LICENSE.md`.
   - 10 минут на проверку.

---

## Что будет оцениваться?

- **Всё ли на месте?** Все три файла созданы и содержат нужные части.
- **Понятно ли?** Текст простой, без сложных слов.
- **Правильно ли оформлено?** Заголовки с `#`, списки с `-` или `1.`, код в ```.
- **Выглядит как на GitHub?** Документы похожи на настоящие проекты.
- **Есть ли свои идеи?** Например, добавили свой значок или лишний пункт.

---

## Полезные ссылки

- [Markdown Guide](https://www.markdownguide.org/) - как писать Markdown.
- [Choose a License](https://choosealicense.com/) - про лицензии.
- [Shields.io](https://shields.io/) - для значков.

---

## Советы, чтобы не запутаться

- Пишите коротко и просто, как будто объясняете другу.
- Проверяйте, чтобы заголовки начинались с `#`, а код был между ```.
- Если не знаете, что писать, просто копируйте примеры и меняйте имя.
- Сохраняйте файлы с правильными именами: `README.md`, `CONTRIBUTING.md`, `LICENSE.md`.
- Если что-то не получается, начните с `README.md` - он самый важный.

**Давайте сделаем крутую документацию для TaskMaster! Если что-то непонятно, спросите сразу!**